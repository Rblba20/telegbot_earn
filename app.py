from telethon.sync import TelegramClient
import time
import pyautogui as pg
import sqlite3
import requests
import cloudscraper
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as ec
import cfscrape
import requests
from collections import OrderedDict
from requests import Session
import socket
import cloudscraper


print('–ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞')
path = input()
# print('–í–í–µ–¥–∏—Ç–µ x –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É')
# x = int(input())
# print('–≤–µ–¥–∏—Ç–µ y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É')
# y = int(input())
api_id = 1234567
api_hash = 'your hash'
client = TelegramClient('BOTFORME', api_id,
                        api_hash)  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º—ã –≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
client.start()  # –∑–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç

dlgs = client.get_dialogs()  # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—à–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤, –≥—Ä—É–ø–ø –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º—ã —Å–æ—Å—Ç–æ–∏–º
for dlg in dlgs:
    if dlg.title == 'BCH Click Bot':
        btc = dlg  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—ã–π –¥–∏–∞–ª–æ–≥ –∏ –∑–∞–ø–∏—Å—ã–≤–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é


def get_t(s):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Å–ª–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏
    l = len(s)
    integ = 30
    i = 0
    while i < l:
        s_int = ''
        a = s[i]
        while '0' <= a <= '9':
            s_int += a
            i += 1
            if i < l:
                a = s[i]
            else:
                break
        i += 1
        if s_int != '':
            return int(s_int)


i = 0


# def get_webdriver():
#   option = webdriver.FirefoxOptions()
#   option.set_preference('dom.webdriver.enabled', False)
#   driver = webdriver.Firefox(options=option)
#   return driver


def send_msg_to_work():  # —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –±–æ—Ç—Ç—É –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Å–∞–π—Ç–æ–≤
    global i
    client.send_message('BCH Click Bot', 'üñ• Visit sites')  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∫ –±–æ—Ç—É
    i += 1
    time.sleep(1)  # –∂–¥–µ–º –ø–æ–∫–∞ –±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å—Å—ã–ª–∫—É
    get_msg = client.get_messages(btc, limit=1)  # –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–º –æ—Ç–æ—Å–ª–∞–ª –±–æ—Ç
    get_msg[0].click(0)  # –Ω–∞–∂—ã–º–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —Å—Å—ã–ª–∫–æ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞. –ü–æ –Ω–µ–π –Ω–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–∞–π—Ç
    time.sleep(2.5)  # –∂–¥–µ–º  –ø—Ä–æ–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –µ–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–∞–π—Ç–∞
    pg.click(665, 286)  # –Ω–∞–∂—ã–º–∞–µ–º –Ω–µ —Ä–µ–∫–∞–ø—á—É, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞ —Å–∞–π—Ç–µ. –í–æ–∑–º–æ–∂–Ω–∞ –∂–æ—Ä–∞–±–æ—Ç–∫–∞ —Å –º–∞—à—à—ã–Ω—ã–º –∑—Ä–µ–Ω–∏–µ–º,
    # –Ω–æ —è —Ä–µ—à–∏–ª –Ω–µ –∑–∞–º–æ—Ä–∞—á–∏–≤—Ç—å—Å—è –∏ –ø—Ä–æ—Å—Ç–æ –∫–ª–∏–∫–∞—Ç—å –Ω–∞ –∫–∞–ø—á—É –∏ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ–µ –Ω–∞–ª–∏—á–∏–µ –Ω–∞ –¥—ã–Ω–Ω–æ–º —Å–∞–π—Ç–µ
    time.sleep(2.5)

    con = sqlite3.connect(path)
    cur = con.cursor()
    id_select = cur.execute("""SELECT id FROM moz_historyvisits""").fetchall()
    for j in range(len(id_select)):
        id_select[j] = str(id_select[j])[1:-2]
        id_select[j] = int(id_select[j])
    select = max(id_select)
    place_id = cur.execute("""SELECT place_id FROM moz_historyvisits WHERE id == ?""",
                           (select,)).fetchall()
    place_id = str(place_id)[2:-3]
    link = cur.execute("""SELECT url FROM moz_places WHERE id == ?""",
                       (place_id,)).fetchall()
    link = str(link)[3:-4]
#  s = Session()
 #   headers = OrderedDict({
  #      'Accept-Encoding': 'gzip, deflate, br',
  #      'Host': "grimaldis.myguestaccount.com",
  #     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0'
  #  })
  #  s.headers = headers
 #   html_code = s.get(link, headers=headers, verify=False).text
   # print(html_code)
    scraper = cloudscraper.create_scraper()  # returns a CloudScraper instance
    # Or: scraper = cloudscraper.CloudScraper()  # CloudScraper inherits from requests.Session
    html_code = scraper.get(link).text
    print(html_code)  # => "<!DOCTYPE html><html><head>..."

    # scraper = cfscrape.create_scraper()  # returns a CloudflareScraper instance
    # Or: scraper = cfscrape.CloudflareScraper()  # CloudflareScraper inherits from requests.Session
    # html_code = str(scraper.get(link).content)  # => "<!DOCTYPE html><html><head>..."
    #    driver = get_webdriver()
    #   html_code = driver.get(link)
    # scraper = cloudscraper.create_scraper()
    #  header = {
    #     'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
    #                    'Chrome/75.0.3770.100 Safari/537.36'}
    # response = requests.get(link, headers=header)
    # response = requests.get(link)
    # html_code = response.text
    # html_code = scraper.get(link).text
    # print(html_code)
    if 'data-timer=' in html_code:
        print('yes')
        html_code = str(html_code)
        list_ = html_code.split()
        for g in range(len(list_)):
            if 'data-timer=' in list_[g]:
                a = str(list_[g])[12:-1]
                print(a)
                integ = int(a) + 1.5
    elif 'data-timer=' not in html_code:
        print('no')
        time_msg = client.get_messages(btc,
                                       limit=1)  # –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å–∞–π—Ç –±–æ–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤
        # –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–∫–æ–ª—å–∫–æ —è –¥–æ–ª–∂–µ–Ω –±—Ü–¥–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–∞–π—Ç–µ
        st = time_msg[0].message  # –ø–µ—Ä–µ–º–µ–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        s = st
        integ = 10  # –∫–æ–ª–∏—á–µ—Å–≤–æ —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
        if get_t(st) is None:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞—à–ª–∞ —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫–µ —Ç–æ–≥–¥–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            pass
        else:
            integ = get_t(st)  # –µ—Å–ª–∏ –Ω–∞—à–ª–∞ —Ç–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–æ–π –≤—Ä–µ–º–µ–Ω–∏ —Ç–æ —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–∞–µ –Ω–∞–º –≤–æ–∑–≤—Ä–∞—Ç–∏–ª–∞ —Ñ—É–Ω–∫—Ü–∏—è
        if integ > 60:
            integ = 20
        elif integ < 10:
            integ = 10
    print('sleep - ' + str(integ))
    time.sleep(integ)  # –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    pg.click(665, 286)
    pg.hotkey('ctrl', 'w')  # –∑–∞–∫—Ä—ã–≤–µ–º –≤–∫–ª–∞–¥–∫—É –≤ —Ö—Ä–æ–º–µ


#    pg.click(x, y)  # –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∏–∫–æ–Ω–∫—É —Ç–µ–ª–µ–≥—Ä–∞–º–∞


while True:  # –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
    send_msg_to_work()
    print('Task number - ' + str(i))

# 695 748 C:\Users\User\AppData\Roaming\Mozilla\Firefox\Profiles\enpkw53a.default-release-1\places.sqlite <div
# class="cf-alert cf-alert-error cf-cookie-error hidden" id="cookie-alert" data-translate="enable_cookies">Please
# enable cookies.</div> <div id="cf-error-details" class="p-0">
